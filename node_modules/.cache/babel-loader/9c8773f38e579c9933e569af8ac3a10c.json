{"ast":null,"code":"import _regeneratorRuntime from\"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useState}from\"react\";import{withRouter,Redirect}from\"react-router\";import{Link}from\"react-router-dom\";import{Button,Form,Grid,Header,Message,Container,Divider,GridRow}from\"semantic-ui-react\";import\"./../Style/Login.css\";import firebase from\"../FirebaseAPI\";import{AuthContext}from\"./../Auth\";var Login=function Login(_ref){var history=_ref.history;var _useState=useState({error:\"\"}),_useState2=_slicedToArray(_useState,2),Err=_useState2[0],setErr=_useState2[1];var handleLogin=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _event$target$element,email,password;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_event$target$element=event.target.elements,email=_event$target$element.email,password=_event$target$element.password;if(email.value){_context.next=4;break;}return _context.abrupt(\"return\",setErr({error:\"Email is required\"}));case 4:if(password.value){_context.next=6;break;}return _context.abrupt(\"return\",setErr({error:\"Password is required\"}));case 6:_context.prev=6;_context.next=9;return firebase.auth().signInWithEmailAndPassword(email.value,password.value);case 9:history.push(\"/main\");_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](6);setErr({error:_context.t0.message});case 15:case\"end\":return _context.stop();}}},_callee,null,[[6,12]]);}));return function(_x){return _ref2.apply(this,arguments);};}(),[history]);var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;if(currentUser){return React.createElement(Redirect,{to:\"/main\"});}return React.createElement(\"div\",{className:\"area\"},React.createElement(Container,{className:\"box\",style:{width:400}},React.createElement(Header,{as:\"h2\",icon:true,textAlign:\"center\"},React.createElement(Header.Content,{style:{color:\"white\"}},\"Sign In\")),React.createElement(Divider,null),React.createElement(Form,{inverted:true,style:{paddingTop:20},error:true,onSubmit:handleLogin},Err.error&&React.createElement(Message,{error:true,header:Err.error}),React.createElement(Form.Input,{icon:\"user\",iconPosition:\"left\",label:\"Email\",placeholder:\"Email\",name:\"email\",type:\"email\"}),React.createElement(Form.Input,{icon:\"lock\",iconPosition:\"left\",label:\"Password\",type:\"password\",placeholder:\"Password\",name:\"password\"}),React.createElement(Grid,null,React.createElement(Grid.Column,{textAlign:\"center\"},React.createElement(Grid.Row,null,React.createElement(Button,{type:\"submit\",content:\"Login\",basic:true,inverted:true,color:\"teal\",size:\"large\",style:{marginTop:\"1em\"}})),React.createElement(GridRow,null,React.createElement(Header,{as:\"h5\",textAlign:\"center\"},React.createElement(Header.Content,{style:{color:\"#909090\",marginTop:\"2em\"}},\"Don't have an account?\",\" \",React.createElement(Link,{to:\"/register\"},React.createElement(\"i\",null,\"Sign Up\"))))))))),React.createElement(\"ul\",{className:\"circles\"},React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null),React.createElement(\"li\",null)));};export default withRouter(Login);/*export class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n\n    \n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    const email = this.state.username;\n    const password = this.state.password;\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(response => {\n          console.log(\"#\", response.user.uid);\n          alert(\"Successfully Logged In\");\n          return this.props.history.push(\"/main\")\n          \n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Login;*/","map":{"version":3,"sources":["/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Login.js"],"names":["React","useCallback","useContext","useState","withRouter","Redirect","Link","Button","Form","Grid","Header","Message","Container","Divider","GridRow","firebase","AuthContext","Login","history","error","Err","setErr","handleLogin","event","preventDefault","target","elements","email","password","value","auth","signInWithEmailAndPassword","push","message","currentUser","width","color","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Container,\n  Divider,\n  GridRow\n} from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst Login = ({ history }) => {\n  const [Err, setErr] = useState({ error: \"\" });\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      if (!email.value) {\n        return setErr({ error: \"Email is required\" });\n      }\n      if (!password.value) {\n        return setErr({ error: \"Password is required\" });\n      }\n      try {\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/main\");\n      } catch (err) {\n        setErr({ error: err.message });\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/main\" />;\n  }\n  return (\n    <div className=\"area\">\n      <Container className=\"box\" style={{ width: 400 }}>\n        <Header as=\"h2\" icon textAlign=\"center\">\n          <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n        </Header>\n        <Divider />\n        <Form inverted style={{ paddingTop: 20 }} error onSubmit={handleLogin}>\n          {Err.error && <Message error header={Err.error} />}\n\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            label=\"Email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n          />\n          <Form.Input\n            icon=\"lock\"\n            iconPosition=\"left\"\n            label=\"Password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n          />\n          <Grid>\n            <Grid.Column textAlign=\"center\">\n              <Grid.Row>\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Row>\n              <GridRow>\n                <Header as=\"h5\" textAlign=\"center\">\n                  <Header.Content\n                    style={{ color: \"#909090\", marginTop: \"2em\" }}\n                  >\n                    Don't have an account?{\" \"}\n                    <Link to=\"/register\">\n                      <i>Sign Up</i>\n                    </Link>\n                  </Header.Content>\n                </Header>\n              </GridRow>\n            </Grid.Column>\n          </Grid>\n        </Form>\n      </Container>\n\n      <ul className=\"circles\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n\n/*export class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n\n    \n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    const email = this.state.username;\n    const password = this.state.password;\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(response => {\n          console.log(\"#\", response.user.uid);\n          alert(\"Successfully Logged In\");\n          return this.props.history.push(\"/main\")\n          \n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Login;*/\n"]},"metadata":{},"sourceType":"module"}