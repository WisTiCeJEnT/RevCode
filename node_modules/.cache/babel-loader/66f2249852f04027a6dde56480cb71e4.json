{"ast":null,"code":"// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\nmatching = require('./matching');\nscoring = require('./scoring');\ntime_estimates = require('./time_estimates');\nfeedback = require('./feedback');\n\ntime = function () {\n  return new Date().getTime();\n};\n\nzxcvbn = function (password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n\n  start = time();\n  sanitized_inputs = [];\n\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\n\nmodule.exports = zxcvbn;","map":null,"metadata":{},"sourceType":"script"}