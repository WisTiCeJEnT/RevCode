{"ast":null,"code":"'use strict';\n\nmodule.exports = flow;\nflow.displayName = 'flow';\nflow.aliases = [];\n\nfunction flow(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {});\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [{\n        pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n        alias: 'tag'\n      }]\n    });\n    Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n    delete Prism.languages.flow['parameter'];\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    });\n\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n    }\n\n    Prism.languages.flow.keyword.unshift({\n      pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n      lookbehind: true\n    });\n  })(Prism);\n}","map":null,"metadata":{},"sourceType":"script"}