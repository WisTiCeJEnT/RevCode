{"ast":null,"code":"var _jsxFileName = \"/Users/finality5/Desktop/speechreg/src/Speech.js\";\nimport React, { Component } from \"react\";\nimport { Button, Message } from \"semantic-ui-react\";\nvar recognition = new window.webkitSpeechRecognition();\nlet speech = \"\";\nvar forcestop = false;\nexport class Speech extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      btnStyle: true,\n      btnText: true,\n      res: \"\"\n    };\n\n    this.btnPressed = () => {\n      this.setState({\n        btnStyle: !this.state.btnStyle\n      });\n      this.setState({\n        btnText: !this.state.btnText\n      });\n\n      if (window.hasOwnProperty(\"webkitSpeechRecognition\")) {\n        recognition.continuous = true;\n        recognition.interimResults = false;\n        recognition.lang = \"en-US\";\n        recognition.lang = \"th-TH\";\n        recognition.start();\n\n        recognition.onresult = function (e) {\n          // console.log(e)\n          speech = speech + e.results[0][0].transcript;\n          console.log(speech);\n        };\n\n        recognition.onend = function (e) {\n          console.log(\"onend\");\n          console.log(e);\n\n          if (forcestop) {\n            forcestop = false;\n            this.setState({\n              res: speech\n            });\n          } else {\n            recognition.start();\n          }\n        };\n\n        recognition.onerror = function (e) {\n          console.log(\"on error\");\n          console.log(e);\n        };\n      } else {\n        alert(\"Must upgrade browser.\");\n      }\n    };\n  }\n\n  render() {\n    console.log('#', this.state.res);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      content: this.state.btnText ? \"Start Record\" : \"Recording\",\n      icon: \"microphone\",\n      color: this.state.btnStyle ? \"teal\" : \"red\",\n      labelPosition: \"left\",\n      onClick: this.btnPressed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Result\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.res)));\n  }\n\n}\nexport default Speech;","map":{"version":3,"sources":["/Users/finality5/Desktop/speechreg/src/Speech.js"],"names":["React","Component","Button","Message","recognition","window","webkitSpeechRecognition","speech","forcestop","Speech","state","btnStyle","btnText","res","btnPressed","setState","hasOwnProperty","continuous","interimResults","lang","start","onresult","e","results","transcript","console","log","onend","onerror","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Message } from \"semantic-ui-react\";\n\nvar recognition = new window.webkitSpeechRecognition();\nlet speech = \"\";\nvar forcestop = false;\nexport class Speech extends Component {\n  state = { btnStyle: true, btnText: true,res:\"\" };\n  btnPressed = () => {\n    this.setState({ btnStyle: !this.state.btnStyle });\n    this.setState({ btnText: !this.state.btnText });\n    if (window.hasOwnProperty(\"webkitSpeechRecognition\")) {\n      recognition.continuous = true;\n      recognition.interimResults = false;\n\n      recognition.lang = \"en-US\";\n      recognition.lang = \"th-TH\";\n      recognition.start();\n\n      recognition.onresult = function(e) {\n        // console.log(e)\n        speech = speech + e.results[0][0].transcript;\n        console.log(speech);\n      };\n\n      recognition.onend = function(e) {\n        console.log(\"onend\");\n        console.log(e);\n        if (forcestop) {\n          forcestop = false;\n          this.setState({res:speech})\n        } else {\n          recognition.start();\n        }\n      };\n\n      recognition.onerror = function(e) {\n        console.log(\"on error\");\n        console.log(e);\n      };\n    } else {\n      alert(\"Must upgrade browser.\");\n    }\n  };\n  render() {\n    console.log('#',this.state.res)\n    return (\n      <div>\n        <Button\n          content={this.state.btnText ? \"Start Record\" : \"Recording\"}\n          icon=\"microphone\"\n          color={this.state.btnStyle ? \"teal\" : \"red\"}\n          labelPosition=\"left\"\n          onClick={this.btnPressed}\n        />\n        <Message>\n          <Message.Header>Result</Message.Header>\n          <p>\n            {this.state.res}\n          </p>\n        </Message>\n        \n      </div>\n    );\n  }\n}\n\nexport default Speech;\n"]},"metadata":{},"sourceType":"module"}