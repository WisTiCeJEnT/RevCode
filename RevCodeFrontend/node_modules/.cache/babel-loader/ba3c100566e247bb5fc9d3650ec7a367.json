{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/**\n * The function that correctly handles passing refs.\n *\n * @param ref An ref object or function\n * @param node A node that should be passed by ref\n */\n\nvar handleRef = function handleRef(ref, node) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof ref === 'string') {\n      throw new Error('We do not support refs as string, this is a legacy API and will be likely to be removed in one of the future releases of React.');\n    }\n  }\n\n  if (typeof ref === 'function') {\n    ref(node);\n    return;\n  }\n\n  if (ref !== null && _typeof(ref) === 'object') {\n    // The `current` property is defined as readonly, however it's a valid way because\n    // `ref` is a mutable object\n    ;\n    ref.current = node;\n  }\n};\n\nexport default handleRef;","map":null,"metadata":{},"sourceType":"module"}