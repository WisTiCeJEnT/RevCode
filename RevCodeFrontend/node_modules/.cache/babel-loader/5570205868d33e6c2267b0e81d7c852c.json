{"ast":null,"code":"import _slicedToArray from \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Login.js\";\nimport React, { useCallback, useContext, useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Button, Form, Grid, Header, Message, Container, Divider } from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst Login = ({\n  history\n}) => {\n  const _useState = useState({\n    error: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        Err = _useState2[0],\n        setErr = _useState2[1];\n\n  const handleLogin = useCallback(async event => {\n    event.preventDefault();\n    const _event$target$element = event.target.elements,\n          email = _event$target$element.email,\n          password = _event$target$element.password;\n\n    if (!email.value) {\n      return setErr({\n        error: \"Email is required\"\n      });\n    }\n\n    if (!password.value) {\n      return setErr({\n        error: \"Password is required\"\n      });\n    }\n\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email.value, password.value);\n      history.push(\"/main\");\n    } catch (err) {\n      setErr({\n        error: err.message\n      });\n    }\n  }, [history]);\n\n  const _useContext = useContext(AuthContext),\n        currentUser = _useContext.currentUser;\n\n  if (currentUser) {\n    return React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"box\",\n    style: {\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Header.Content, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign In\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Form, {\n    inverted: true,\n    style: {\n      paddingTop: 20\n    },\n    error: true,\n    onSubmit: handleLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, Err.error && React.createElement(Message, {\n    error: true,\n    header: Err.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    content: \"Login\",\n    basic: true,\n    inverted: true,\n    color: \"teal\",\n    size: \"large\",\n    style: {\n      marginTop: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))))), React.createElement(\"ul\", {\n    className: \"circles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(Login);\n/*export class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n\n    \n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    const email = this.state.username;\n    const password = this.state.password;\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(response => {\n          console.log(\"#\", response.user.uid);\n          alert(\"Successfully Logged In\");\n          return this.props.history.push(\"/main\")\n          \n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Login;*/","map":{"version":3,"sources":["/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Login.js"],"names":["React","useCallback","useContext","useState","withRouter","Redirect","Button","Form","Grid","Header","Message","Container","Divider","firebase","AuthContext","Login","history","error","Err","setErr","handleLogin","event","preventDefault","target","elements","email","password","value","auth","signInWithEmailAndPassword","push","err","message","currentUser","width","color","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext , useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Container,\n  Divider\n} from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst Login = ({ history }) => {\n  const [Err, setErr] = useState({ error: \"\" });\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      if (!email.value) {\n        return setErr({ error: \"Email is required\" });\n      }\n      if (!password.value) {\n        return setErr({ error: \"Password is required\" });\n      }\n      try {\n        await firebase\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/main\");\n      } catch (err) {\n        setErr({ error: err.message });\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/main\" />;\n  }\n  return (\n    <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={handleLogin}\n          >\n          {Err.error && (\n            <Message\n              error\n              header={Err.error}\n            />\n          )}\n    \n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n  );\n};\n\nexport default withRouter(Login);\n\n/*export class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n\n    \n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    const email = this.state.username;\n    const password = this.state.password;\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(response => {\n          console.log(\"#\", response.user.uid);\n          alert(\"Successfully Logged In\");\n          return this.props.history.push(\"/main\")\n          \n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Sign In</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Login\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Login;*/\n"]},"metadata":{},"sourceType":"module"}