{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar env = require(\"exenv\");\n\nrequire(\"prop-types\");\n\nvar React = require(\"react\");\n\nfunction _typeof(e) {\n  return (_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n    return typeof e;\n  } : function (e) {\n    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n  })(e);\n}\n\nfunction _classCallCheck(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _defineProperties(e, t) {\n  for (var n = 0; n < t.length; n++) {\n    var r = t[n];\n    r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n  }\n}\n\nfunction _createClass(e, t, n) {\n  return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), e;\n}\n\nfunction _defineProperty(e, t, n) {\n  return t in e ? Object.defineProperty(e, t, {\n    value: n,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[t] = n, e;\n}\n\nfunction _inherits(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      writable: !0,\n      configurable: !0\n    }\n  }), t && _setPrototypeOf(e, t);\n}\n\nfunction _getPrototypeOf(e) {\n  return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n    return e.__proto__ || Object.getPrototypeOf(e);\n  })(e);\n}\n\nfunction _setPrototypeOf(e, t) {\n  return (_setPrototypeOf = Object.setPrototypeOf || function (e, t) {\n    return e.__proto__ = t, e;\n  })(e, t);\n}\n\nfunction _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\n\nfunction _possibleConstructorReturn(e, t) {\n  return !t || \"object\" != typeof t && \"function\" != typeof t ? _assertThisInitialized(e) : t;\n}\n\nvar EventSet = function () {\n  function e(t) {\n    _classCallCheck(this, e), _defineProperty(this, \"handlers\", void 0), this.handlers = t.slice(0);\n  }\n\n  return _createClass(e, [{\n    key: \"addHandlers\",\n    value: function value(t) {\n      for (var n = this.handlers.slice(0), r = t.length, o = 0; o < r; o += 1) {\n        n.push(t[o]);\n      }\n\n      return new e(n);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function value(e, t) {\n      var n = this.handlers.length - 1;\n\n      if (t) {\n        for (var r = n; r >= 0; r -= 1) {\n          this.handlers[r].called || (this.handlers[r].called = !0, this.handlers[r](e));\n        }\n\n        for (var o = n; o >= 0; o -= 1) {\n          this.handlers[o].called = !1;\n        }\n      } else {\n        (0, this.handlers[n])(e);\n      }\n    }\n  }, {\n    key: \"hasHandlers\",\n    value: function value() {\n      return this.handlers.length > 0;\n    }\n  }, {\n    key: \"removeHandlers\",\n    value: function value(t) {\n      for (var n = [], r = this.handlers.length, o = 0; o < r; o += 1) {\n        var a = this.handlers[o];\n        -1 === t.indexOf(a) && n.push(a);\n      }\n\n      return new e(n);\n    }\n  }]), e;\n}();\n\nfunction cloneMap(e) {\n  var t = new Map();\n  return e.forEach(function (e, n) {\n    t.set(n, e);\n  }), t;\n}\n\nfunction normalizeHandlers(e) {\n  return Array.isArray(e) ? e : [e];\n}\n\nvar isRefObject = function isRefObject(e) {\n  return null !== e && \"object\" === _typeof(e) && e.hasOwnProperty(\"current\");\n};\n\nfunction normalizeTarget(e) {\n  return \"document\" === e ? document : \"window\" === e ? window : isRefObject(e) ? e.current || document : e || document;\n}\n\nvar EventPool = function () {\n  function e(t, n) {\n    _classCallCheck(this, e), _defineProperty(this, \"handlerSets\", void 0), _defineProperty(this, \"poolName\", void 0), this.handlerSets = n, this.poolName = t;\n  }\n\n  return _createClass(e, [{\n    key: \"addHandlers\",\n    value: function value(t, n) {\n      var r = cloneMap(this.handlerSets);\n\n      if (r.has(t)) {\n        var o = r.get(t);\n        r.set(t, o.addHandlers(n));\n      } else r.set(t, new EventSet(n));\n\n      return new e(this.poolName, r);\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function value(e, t) {\n      var n = this.handlerSets.get(e),\n          r = \"default\" === this.poolName;\n      n && n.dispatchEvent(t, r);\n    }\n  }, {\n    key: \"hasHandlers\",\n    value: function value() {\n      return this.handlerSets.size > 0;\n    }\n  }, {\n    key: \"removeHandlers\",\n    value: function value(t, n) {\n      var r = cloneMap(this.handlerSets);\n      if (!r.has(t)) return new e(this.poolName, r);\n      var o = r.get(t).removeHandlers(n);\n      return o.hasHandlers() ? r.set(t, o) : r.delete(t), new e(this.poolName, r);\n    }\n  }]), e;\n}();\n\n_defineProperty(EventPool, \"createByType\", function (e, t, n) {\n  var r = new Map();\n  return r.set(t, new EventSet(n)), new EventPool(e, r);\n});\n\nvar EventTarget = function () {\n  function e(t) {\n    var n = this;\n    _classCallCheck(this, e), _defineProperty(this, \"handlers\", new Map()), _defineProperty(this, \"pools\", new Map()), _defineProperty(this, \"target\", void 0), _defineProperty(this, \"createEmitter\", function (e) {\n      return function (t) {\n        n.pools.forEach(function (n) {\n          n.dispatchEvent(e, t);\n        });\n      };\n    }), this.target = t;\n  }\n\n  return _createClass(e, [{\n    key: \"addHandlers\",\n    value: function value(e, t, n) {\n      if (this.pools.has(e)) {\n        var r = this.pools.get(e);\n        this.pools.set(e, r.addHandlers(t, n));\n      } else this.pools.set(e, EventPool.createByType(e, t, n));\n\n      this.handlers.has(t) || this.addTargetHandler(t);\n    }\n  }, {\n    key: \"hasHandlers\",\n    value: function value() {\n      return this.handlers.size > 0;\n    }\n  }, {\n    key: \"removeHandlers\",\n    value: function value(e, t, n) {\n      if (this.pools.has(e)) {\n        var r = this.pools.get(e).removeHandlers(t, n);\n        r.hasHandlers() ? this.pools.set(e, r) : this.pools.delete(e), 0 === this.pools.size && this.removeTargetHandler(t);\n      }\n    }\n  }, {\n    key: \"addTargetHandler\",\n    value: function value(e) {\n      var t = this.createEmitter(e);\n      this.handlers.set(e, t), this.target.addEventListener(e, t, !0);\n    }\n  }, {\n    key: \"removeTargetHandler\",\n    value: function value(e) {\n      this.handlers.has(e) && (this.target.removeEventListener(e, this.handlers.get(e), !0), this.handlers.delete(e));\n    }\n  }]), e;\n}(),\n    EventStack = function () {\n  function e() {\n    var t = this;\n    _classCallCheck(this, e), _defineProperty(this, \"targets\", new Map()), _defineProperty(this, \"getTarget\", function (e) {\n      var n = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],\n          r = normalizeTarget(e);\n      if (t.targets.has(r)) return t.targets.get(r);\n      if (!n) return null;\n      var o = new EventTarget(r);\n      return t.targets.set(r, o), o;\n    }), _defineProperty(this, \"removeTarget\", function (e) {\n      t.targets.delete(normalizeTarget(e));\n    });\n  }\n\n  return _createClass(e, [{\n    key: \"sub\",\n    value: function value(e, t) {\n      var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n\n      if (env.canUseDOM) {\n        var r = n.target,\n            o = void 0 === r ? document : r,\n            a = n.pool,\n            s = void 0 === a ? \"default\" : a;\n        this.getTarget(o).addHandlers(s, e, normalizeHandlers(t));\n      }\n    }\n  }, {\n    key: \"unsub\",\n    value: function value(e, t) {\n      var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n\n      if (env.canUseDOM) {\n        var r = n.target,\n            o = void 0 === r ? document : r,\n            a = n.pool,\n            s = void 0 === a ? \"default\" : a,\n            i = this.getTarget(o, !1);\n        i && (i.removeHandlers(s, e, normalizeHandlers(t)), i.hasHandlers() || this.removeTarget(o));\n      }\n    }\n  }]), e;\n}(),\n    instance = new EventStack(),\n    EventStack$1 = function (e) {\n  function t() {\n    return _classCallCheck(this, t), _possibleConstructorReturn(this, _getPrototypeOf(t).apply(this, arguments));\n  }\n\n  return _inherits(t, React.PureComponent), _createClass(t, [{\n    key: \"componentDidMount\",\n    value: function value() {\n      this.subscribe(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function value(e) {\n      this.unsubscribe(e), this.subscribe(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function value() {\n      this.unsubscribe(this.props);\n    }\n  }, {\n    key: \"subscribe\",\n    value: function value(e) {\n      var t = e.name,\n          n = e.on,\n          r = e.pool,\n          o = e.target;\n      instance.sub(t, n, {\n        pool: r,\n        target: o\n      });\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function value(e) {\n      var t = e.name,\n          n = e.on,\n          r = e.pool,\n          o = e.target;\n      instance.unsub(t, n, {\n        pool: r,\n        target: o\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function value() {\n      return null;\n    }\n  }]), t;\n}();\n\n_defineProperty(EventStack$1, \"defaultProps\", {\n  pool: \"default\",\n  target: \"document\"\n}), EventStack$1.propTypes = {}, exports.instance = instance, exports.default = EventStack$1;","map":null,"metadata":{},"sourceType":"script"}