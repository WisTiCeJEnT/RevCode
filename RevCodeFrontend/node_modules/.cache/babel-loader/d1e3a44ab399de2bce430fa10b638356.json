{"ast":null,"code":"import _slicedToArray from \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Register.js\";\nimport React, { useCallback, useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Button, Form, Grid, Header, Message, Container, Divider } from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport axios from \"axios\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst Register = ({\n  history\n}) => {\n  const handleRegister = useCallback(async event => {\n    event.preventDefault();\n    const _event$target$element = event.target.elements,\n          email = _event$target$element.email,\n          password = _event$target$element.password,\n          cpassword = _event$target$element.cpassword,\n          username = _event$target$element.username;\n\n    const _useState = useState({\n      error: \"\"\n    }),\n          _useState2 = _slicedToArray(_useState, 2),\n          Err = _useState2[0],\n          setErr = _useState2[1];\n\n    if (password.value !== cpassword.value) {\n      alert(\"Confirm password and password don't match\");\n    } else {\n      try {\n        await firebase.auth().createUserWithEmailAndPassword(email.value, password.value).then(async response => {\n          console.log(\"#\", response);\n          await axios.post(\"https://revcode.herokuapp.com/adduser\", {\n            uid: response.user.uid,\n            name: username.value\n          }).then(res => {\n            console.log(res);\n            alert(\"Successfully Registered\");\n          }).catch(err => {\n            setErr({\n              error: err.message\n            }); //alert(err)\n          });\n          firebase.auth().signOut();\n          history.push(\"/\");\n        }).catch(err => {\n          setErr({\n            error: err.message\n          }); //alert(error)\n        });\n      } catch (error) {\n        alert(error);\n      }\n    }\n  }, [history]);\n  return React.createElement(\"div\", {\n    className: \"area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"box\",\n    style: {\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Header.Content, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Register\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Form, {\n    inverted: true,\n    style: {\n      paddingTop: 20\n    },\n    error: true,\n    onSubmit: handleRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"mail\",\n    iconPosition: \"left\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"cpassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    content: \"Sign Up\",\n    basic: true,\n    inverted: true,\n    color: \"teal\",\n    size: \"large\",\n    style: {\n      marginTop: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))))), React.createElement(\"ul\", {\n    className: \"circles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(Register);\n/*export class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      cpassword: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleCPassChange = this.handleCPassChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.email) {\n      return this.setState({ error: \"Email is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    if (!this.state.cpassword) {\n      return this.setState({ error: \"Confirm Password is required\" });\n    }\n    if (this.state.password !== this.state.cpassword) {\n      return this.setState({\n        error: \"Your password and confirm password don't match\"\n      });\n    }\n    const email = this.state.email;\n    const password = this.state.password;\n\n    try {\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(async response => {\n          console.log(\"#\", response);\n          await axios\n            .post(\"https://revcode.herokuapp.com/adduser\", {\n              uid: response.user.uid,\n              name: this.state.username\n            })\n            .then(res => {\n              console.log(res);\n              alert(\"Successfully Registered\");\n            })\n            .catch(err => {\n              this.setState({\n                error: err.message\n              });\n            });\n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handleEmailChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  handleCPassChange(evt) {\n    this.setState({\n      cpassword: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Register</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              fluid\n              id=\"form-subcomponent-shorthand-input-first-name\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n\n            <Form.Input\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={this.state.cpassword}\n              onChange={this.handleCPassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Register;*/","map":{"version":3,"sources":["/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Register.js"],"names":["React","useCallback","useState","withRouter","Redirect","Button","Form","Grid","Header","Message","Container","Divider","axios","firebase","AuthContext","Register","history","handleRegister","event","preventDefault","target","elements","email","password","cpassword","username","error","Err","setErr","value","alert","auth","createUserWithEmailAndPassword","then","response","console","log","post","uid","user","name","res","catch","err","message","signOut","push","width","color","paddingTop","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Container,\n  Divider\n} from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport axios from \"axios\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst Register = ({ history }) => {\n  const handleRegister = useCallback(\n    async event => {\n      event.preventDefault();\n      \n      const { email, password , cpassword , username } = event.target.elements;\n      \n      const [Err,setErr] = useState({error:\"\"})\n      if(password.value!==cpassword.value){\n        alert(\"Confirm password and password don't match\")\n      }\n      else{\n      try {\n        await firebase\n          .auth()\n          .createUserWithEmailAndPassword(email.value, password.value)\n          .then(async response => {\n            console.log(\"#\", response);\n            await axios\n              .post(\"https://revcode.herokuapp.com/adduser\", {\n                uid: response.user.uid,\n                name: username.value\n              })\n              .then(res => {\n                console.log(res);\n                alert(\"Successfully Registered\");\n              })\n              .catch(err => {\n                setErr({error:err.message});\n                //alert(err)\n              });\n              firebase.auth().signOut()\n              history.push(\"/\");\n            }\n          )\n          .catch(err => {\n            setErr({error:err.message});\n            //alert(error)\n          });\n      } catch (error) {\n        alert(error)\n      }}\n    },\n    [history]\n  );\n\n\n  return (\n    <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Register</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={handleRegister}\n          >\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              name=\"username\"\n              type=\"text\"\n            />\n            <Form.Input\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              type=\"password\"\n\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              name=\"cpassword\"\n \n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n  );\n\n  }\nexport default withRouter(Register);\n\n\n\n\n\n/*export class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      cpassword: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleCPassChange = this.handleCPassChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.email) {\n      return this.setState({ error: \"Email is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    if (!this.state.cpassword) {\n      return this.setState({ error: \"Confirm Password is required\" });\n    }\n    if (this.state.password !== this.state.cpassword) {\n      return this.setState({\n        error: \"Your password and confirm password don't match\"\n      });\n    }\n    const email = this.state.email;\n    const password = this.state.password;\n\n    try {\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(async response => {\n          console.log(\"#\", response);\n          await axios\n            .post(\"https://revcode.herokuapp.com/adduser\", {\n              uid: response.user.uid,\n              name: this.state.username\n            })\n            .then(res => {\n              console.log(res);\n              alert(\"Successfully Registered\");\n            })\n            .catch(err => {\n              this.setState({\n                error: err.message\n              });\n            });\n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handleEmailChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  handleCPassChange(evt) {\n    this.setState({\n      cpassword: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Register</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              fluid\n              id=\"form-subcomponent-shorthand-input-first-name\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n\n            <Form.Input\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={this.state.cpassword}\n              onChange={this.handleCPassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Register;*/\n"]},"metadata":{},"sourceType":"module"}