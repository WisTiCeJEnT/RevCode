{"ast":null,"code":"import _slicedToArray from \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Register.js\";\nimport React, { useCallback, useState, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, Grid, Header, Message, Container, Divider, GridRow, Progress } from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport axios from \"axios\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\n\nconst zxcvbn = require(\"zxcvbn\");\n\nconst Register = ({\n  history\n}) => {\n  const _useState = useState({\n    error: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        Err = _useState2[0],\n        setErr = _useState2[1];\n\n  const handleRegister = useCallback(async event => {\n    event.preventDefault();\n    const _event$target$element = event.target.elements,\n          email = _event$target$element.email,\n          password = _event$target$element.password,\n          cpassword = _event$target$element.cpassword,\n          username = _event$target$element.username;\n\n    if (!username.value) {\n      return setErr({\n        error: \"Username is required\"\n      });\n    }\n\n    if (!email.value) {\n      return setErr({\n        error: \"Email is required\"\n      });\n    }\n\n    if (!password.value) {\n      return setErr({\n        error: \"Password is required\"\n      });\n    }\n\n    if (!cpassword.value) {\n      return setErr({\n        error: \"Confirm password is required\"\n      });\n    }\n\n    if (password.value !== cpassword.value) {\n      return setErr({\n        error: \"Your password and confirm password don't match\"\n      });\n    }\n\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(email.value, password.value).then(async response => {\n        console.log(\"#\", response);\n        await axios.post(\"https://revcode.herokuapp.com/adduser\", {\n          uid: response.user.uid,\n          name: username.value\n        }).then(res => {\n          console.log(res);\n          alert(\"Successfully Registered\");\n        }).catch(err => {\n          setErr({\n            error: err.message\n          }); //alert(err)\n        });\n        firebase.auth().signOut();\n        history.push(\"/\");\n      }).catch(err => {\n        setErr({\n          error: err.message\n        }); //alert(error)\n      });\n    } catch (err) {\n      setErr({\n        error: err.message\n      }); //alert(error)\n    }\n  }, [history]);\n\n  const _useContext = useContext(AuthContext),\n        currentUser = _useContext.currentUser;\n\n  if (currentUser) {\n    return React.createElement(Redirect, {\n      to: \"/main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"box\",\n    style: {\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    icon: true,\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Header.Content, {\n    style: {\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Sign Up\")), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(Form, {\n    inverted: true,\n    style: {\n      paddingTop: 20\n    },\n    error: true,\n    onSubmit: handleRegister,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, Err.error && React.createElement(Message, {\n    error: true,\n    header: Err.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    label: \"Username\",\n    placeholder: \"Username\",\n    name: \"username\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"mail\",\n    iconPosition: \"left\",\n    label: \"Email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: e => {\n      const testedResult = zxcvbn(e.target.value);\n      console.log(\"####\", testedResult.score);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Progress, {\n    percent: 20,\n    color: \"red\",\n    size: \"tiny\",\n    style: {\n      marginBottom: \"0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(Form.Input, {\n    icon: \"lock\",\n    iconPosition: \"left\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"cpassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    content: \"Sign Up\",\n    basic: true,\n    inverted: true,\n    color: \"teal\",\n    size: \"large\",\n    style: {\n      marginTop: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(GridRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h5\",\n    textAlign: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Header.Content, {\n    style: {\n      color: \"#909090\",\n      marginTop: \"2em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Already have an account?\", \" \", React.createElement(Link, {\n    to: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Sign In\"))))))))), React.createElement(\"ul\", {\n    className: \"circles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })));\n};\n\nexport default withRouter(Register);\n/*export class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      cpassword: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleCPassChange = this.handleCPassChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.email) {\n      return this.setState({ error: \"Email is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    if (!this.state.cpassword) {\n      return this.setState({ error: \"Confirm Password is required\" });\n    }\n    if (this.state.password !== this.state.cpassword) {\n      return this.setState({\n        error: \"Your password and confirm password don't match\"\n      });\n    }\n    const email = this.state.email;\n    const password = this.state.password;\n\n    try {\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(async response => {\n          console.log(\"#\", response);\n          await axios\n            .post(\"https://revcode.herokuapp.com/adduser\", {\n              uid: response.user.uid,\n              name: this.state.username\n            })\n            .then(res => {\n              console.log(res);\n              alert(\"Successfully Registered\");\n            })\n            .catch(err => {\n              this.setState({\n                error: err.message\n              });\n            });\n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handleEmailChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  handleCPassChange(evt) {\n    this.setState({\n      cpassword: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Register</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              fluid\n              id=\"form-subcomponent-shorthand-input-first-name\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n\n            <Form.Input\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={this.state.cpassword}\n              onChange={this.handleCPassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Register;*/","map":{"version":3,"sources":["/Users/finality5/Desktop/RevCode/RevCodeFrontend/src/Components/Register.js"],"names":["React","useCallback","useState","useContext","withRouter","Redirect","Link","Button","Form","Grid","Header","Message","Container","Divider","GridRow","Progress","axios","firebase","AuthContext","zxcvbn","require","Register","history","error","Err","setErr","handleRegister","event","preventDefault","target","elements","email","password","cpassword","username","value","auth","createUserWithEmailAndPassword","then","response","console","log","post","uid","user","name","res","alert","catch","err","message","signOut","push","currentUser","width","color","paddingTop","e","testedResult","score","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useContext } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Container,\n  Divider,\n  GridRow,\n  Progress\n} from \"semantic-ui-react\";\nimport \"./../Style/Login.css\";\nimport axios from \"axios\";\nimport firebase from \"../FirebaseAPI\";\nimport { AuthContext } from \"./../Auth\";\nconst zxcvbn = require(\"zxcvbn\");\n\nconst Register = ({ history }) => {\n  const [Err, setErr] = useState({ error: \"\" });\n  const handleRegister = useCallback(\n    async event => {\n      event.preventDefault();\n\n      const { email, password, cpassword, username } = event.target.elements;\n      if (!username.value) {\n        return setErr({ error: \"Username is required\" });\n      }\n      if (!email.value) {\n        return setErr({ error: \"Email is required\" });\n      }\n\n      if (!password.value) {\n        return setErr({ error: \"Password is required\" });\n      }\n      if (!cpassword.value) {\n        return setErr({ error: \"Confirm password is required\" });\n      }\n      if (password.value !== cpassword.value) {\n        return setErr({\n          error: \"Your password and confirm password don't match\"\n        });\n      }\n      try {\n        await firebase\n          .auth()\n          .createUserWithEmailAndPassword(email.value, password.value)\n          .then(async response => {\n            console.log(\"#\", response);\n            await axios\n              .post(\"https://revcode.herokuapp.com/adduser\", {\n                uid: response.user.uid,\n                name: username.value\n              })\n              .then(res => {\n                console.log(res);\n                alert(\"Successfully Registered\");\n              })\n              .catch(err => {\n                setErr({ error: err.message });\n                //alert(err)\n              });\n            firebase.auth().signOut();\n            history.push(\"/\");\n          })\n          .catch(err => {\n            setErr({ error: err.message });\n            //alert(error)\n          });\n      } catch (err) {\n        setErr({ error: err.message });\n        //alert(error)\n      }\n    },\n    [history]\n  );\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to=\"/main\" />;\n  }\n\n  return (\n    <div className=\"area\">\n      <Container className=\"box\" style={{ width: 400 }}>\n        <Header as=\"h2\" icon textAlign=\"center\">\n          <Header.Content style={{ color: \"white\" }}>Sign Up</Header.Content>\n        </Header>\n        <Divider />\n        <Form\n          inverted\n          style={{ paddingTop: 20 }}\n          error\n          onSubmit={handleRegister}\n        >\n          {Err.error && <Message error header={Err.error} />}\n          <Form.Input\n            icon=\"user\"\n            iconPosition=\"left\"\n            label=\"Username\"\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"text\"\n          />\n          <Form.Input\n            icon=\"mail\"\n            iconPosition=\"left\"\n            label=\"Email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n          />\n          <Form.Input\n            icon=\"lock\"\n            iconPosition=\"left\"\n            label=\"Password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={e => {\n              const testedResult = zxcvbn(e.target.value);\n              console.log(\"####\", testedResult.score);\n            }}\n          />\n          <Progress percent={20} color=\"red\" size=\"tiny\" style={{marginBottom:\"0px\"}}/>\n\n          <Form.Input\n            icon=\"lock\"\n            iconPosition=\"left\"\n            label=\"Confirm Password\"\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            name=\"cpassword\"\n          />\n          <Grid>\n            <Grid.Column textAlign=\"center\">\n              <Grid.Row>\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Row>\n              <GridRow>\n                <Header as=\"h5\" textAlign=\"center\">\n                  <Header.Content\n                    style={{ color: \"#909090\", marginTop: \"2em\" }}\n                  >\n                    Already have an account?{\" \"}\n                    <Link to=\"/login\">\n                      <i>Sign In</i>\n                    </Link>\n                  </Header.Content>\n                </Header>\n              </GridRow>\n            </Grid.Column>\n          </Grid>\n        </Form>\n      </Container>\n\n      <ul className=\"circles\">\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n      </ul>\n    </div>\n  );\n};\nexport default withRouter(Register);\n\n/*export class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      cpassword: \"\",\n      error: \"\",\n      currentUser: \"\",\n      loginData: {}\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handlePassChange = this.handlePassChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleCPassChange = this.handleCPassChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.dismissError = this.dismissError.bind(this);\n  }\n\n  dismissError() {\n    this.setState({ error: \"\" });\n  }\n\n  handleSubmit = async evt => {\n    evt.preventDefault();\n    if (!this.state.username) {\n      return this.setState({ error: \"Username is required\" });\n    }\n\n    if (!this.state.email) {\n      return this.setState({ error: \"Email is required\" });\n    }\n\n    if (!this.state.password) {\n      return this.setState({ error: \"Password is required\" });\n    }\n    if (!this.state.cpassword) {\n      return this.setState({ error: \"Confirm Password is required\" });\n    }\n    if (this.state.password !== this.state.cpassword) {\n      return this.setState({\n        error: \"Your password and confirm password don't match\"\n      });\n    }\n    const email = this.state.email;\n    const password = this.state.password;\n\n    try {\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(async response => {\n          console.log(\"#\", response);\n          await axios\n            .post(\"https://revcode.herokuapp.com/adduser\", {\n              uid: response.user.uid,\n              name: this.state.username\n            })\n            .then(res => {\n              console.log(res);\n              alert(\"Successfully Registered\");\n            })\n            .catch(err => {\n              this.setState({\n                error: err.message\n              });\n            });\n        })\n        .catch(error => {\n          this.setState({\n            error: error.message\n          });\n        });\n    } catch (error) {\n      this.setState({\n        error: error.message\n      });\n    }\n\n    return this.setState({ error: \"\" });\n  };\n\n  handleUserChange(evt) {\n    this.setState({\n      username: evt.target.value\n    });\n  }\n\n  handleEmailChange(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  handlePassChange(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  handleCPassChange(evt) {\n    this.setState({\n      cpassword: evt.target.value\n    });\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"area\">\n        <Container className=\"box\" style={{ width: 400 }}>\n          <Header as=\"h2\" icon textAlign=\"center\">\n            <Header.Content style={{ color: \"white\" }}>Register</Header.Content>\n          </Header>\n          <Divider />\n          <Form\n            inverted\n            style={{ paddingTop: 20 }}\n            error\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.error && (\n              <Message\n                onClick={this.dismissError}\n                error\n                header={this.state.error}\n              />\n            )}\n\n            <Form.Input\n              icon=\"user\"\n              iconPosition=\"left\"\n              fluid\n              id=\"form-subcomponent-shorthand-input-first-name\"\n              label=\"Username\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleUserChange}\n            />\n\n            <Form.Input\n              icon=\"mail\"\n              iconPosition=\"left\"\n              label=\"Email\"\n              placeholder=\"Email\"\n              value={this.state.email}\n              onChange={this.handleEmailChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={this.state.password}\n              onChange={this.handlePassChange}\n            />\n            <Form.Input\n              icon=\"lock\"\n              iconPosition=\"left\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={this.state.cpassword}\n              onChange={this.handleCPassChange}\n            />\n            <Grid>\n              <Grid.Column textAlign=\"center\">\n                <Button\n                  type=\"submit\"\n                  content=\"Sign Up\"\n                  basic\n                  inverted\n                  color=\"teal\"\n                  size=\"large\"\n                  style={{ marginTop: \"1em\" }}\n                />\n              </Grid.Column>\n            </Grid>\n          </Form>\n        </Container>\n\n        <ul className=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Register;*/\n"]},"metadata":{},"sourceType":"module"}